/*
    start.me - Semantic MakeMe file
 */

Me.load({
    targets: {
        init: {
            shell: `
                rm -fr distribution
                git clone https://github.com/Semantic-Org/Semantic-UI.git distribution
            `,
        },
        upgrade: {
            shell: `
                git pull
                npm install
                grunt build
            `,
            home: 'distribution',
        },
        build: {
            build: `
                Path('themes').removeAll()
                for each (let src: Path in Path('src/themes').files('*')) {
                    let theme = src.basename
                    trace('Build', 'Theme: ' + theme)
                    src.join('semantic.config').copy('distribution/src/semantic.config')
                    let result = []
                    for each (let f: Path in Path('distribution/src/definitions').files('**.less')) {
                        vtrace('Parse', f)
                        /* MOB  --clean-css -- How to do this grunt style */
                        let css = Cmd.run('lessc ' + f)
                        result.push(css)
                    }
                    let dest = Path('themes/packages').join(theme)
                    dest.makeDir()
                    cp('distribution/build/packaged/themes/packages/default', dest)
//  MOB - add parent because of semantic hard coding of urls
                    let path = dest.parent.join('semantic.css')
                    let path = dest.parent.join(theme + '.css')
                    trace('Save', path)
                    path.write(result.join('\n'))
                }
                /* MOB - minified? */
                cp('distribution/build/packaged/definitions/javascript/semantic.js', 'js/semantic.js')

                /* Copy other standard themes */
                trace('Build', 'Standard themes')
                Path('distribution/src/semantic.config.example').copy('distribution/src/semantic.config')
                run('grunt build', {dir: 'distribution', filter: true})
                for each (let src: Path in Path('distribution/build/packaged/themes/packages').files('*')) {
                    let theme = src.basename
                    trace('Copy', 'Standard theme:', theme)
                    let dest = Path('themes/packages').join(theme)
                    cp(src, dest)
                    cp('distribution/build/packaged/definitions/css/semantic.css', dest.parent.join('semantic.css'))
                    cp('distribution/build/packaged/definitions/css/semantic.css', dest.parent.join(theme + '.css'))
                }
            `
        },
        cache: {
            shell: `cache`,
        }
    }
})
