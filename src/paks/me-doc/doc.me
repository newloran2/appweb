/*
    doc.me - me-doc targets
 */

Me.load({

    modules: [
        'doc.es',
    ],

    internal: {
        platforms: [ 'local' ],
    },

    targets: {
        doc: {
            depends: [ 'clean-doc', 'manpages', 'gen-doc', 'api' ],
        },

        manpages: {
            depends: ['all'],
            action: `
                let man = Cmd.locate('man')
                let man2html = Cmd.locate('man2html')
                if (man && man2html) {
                    for each (file in ls(['${SRC}/doc/documents/man/*.1', '${SRC}/doc/documents/man/*.3'])) {
                        let name = file.basename
                        trace('Generate', 'Manual page for ' + name)
                        let response = run([man, file], {filter: true})
                        file.replaceExt('txt').write(response.replace(/.\b/g, ''))
                        let cmd = Cmd([man2html, '-u'], {detach: true})
                        cmd.write(response)
                        cmd.finalize()
                        response = cmd.response
                        response = response.toLowerCase().
                            replace(/&amp/g, '\&amp;').
                            replace(/&gt/g, '\&gt;').
                            replace(/&lt/g, '\&lt;')
                        response = '<!DOCTYPE html>\n<html lang="eng">\n<head>\n<title>' + 
                            file.basename.trimExt().toString().toPascal() + ' Man Page</title>\n</head>\n' + 
                            response + '</html>'
                        file.replaceExt('html').write(response)
                    }
                } else {
                    trace('Skip', 'manpages bacause man or man2html cannot be located')
                }
            `,
        },

        'gen-doc': {
            home: '${TOP}/doc',
            action: `
                if (Path('exp.json').exists) {
                    trace('Render', 'exp render')
                    run('exp render')
                }
            `,
        },

        'api': {},

        'clean-doc': {
            type: 'clean',
            action: `rmdir(['../doc/api/html', '../doc/api/xml'])`
        },
    },
})
